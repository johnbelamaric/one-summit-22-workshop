## Â© 2022 Nephio Authors
## Licensed under the Apache License 2.0
## SPDX-License-Identifier: Apache-2.0
---
- name: Get UID
  getent:
    database: passwd
  when:
    - gitea_username is defined
    - gitea_password is defined
- name: Create a gitea directory
  ansible.builtin.file:
    path: /home/{{ cloud_user}}/gitea
    state: directory
    mode: '0755'
- name: Start gitea container when using "{{ container_engine }}"
  ansible.builtin.include_tasks: "{{ container_engine }}.yaml"
  when:
    - gitea_username is defined
    - gitea_password is defined

- block:
    - name: Wait for gitea to initialize
      ansible.builtin.wait_for:
        path: /home/{{ cloud_user }}/gitea/ssh

    - name: Creating nephio user in gitea
      shell: |
        {{ container_engine }} exec gitea gitea admin user create --username {{ gitea_username }} --password {{ gitea_password }} --must-change-password=false --access-token --email=nephio@nephio.org
      register: user_cmd_output

    - name: write output to a file
      become: true
      ansible.builtin.copy:
        content: "{{ user_cmd_output }}"
        dest: /home/{{ cloud_user }}/gitea/nephio-create

    - name: capture gitea token
      set_fact:
        giteatoken: "{{ item | split('... ') | last }}"
      when: item | regex_search('Access token was successfully created')
      loop: "{{user_cmd_output.stdout_lines}}"

    - name: write token to a file
      become: true
      ansible.builtin.copy:
        content: "{{ giteatoken }}"
        dest: /home/{{ cloud_user }}/gitea/nephio-gitea-token
  when:
    - gitea_username is defined
    - gitea_password is defined

- name: Create and configure blueprint repos
  block:
    - name: Create blueprint repo "{{ blueprint_repos.0 }}"
      ansible.builtin.uri:
        url: http://localhost:3000/api/v1/user/repos
        headers:
          Authorization: token {{ giteatoken }}
          Content-Type: application/json
          accept: application/json
        method: POST
        body: {'auto_init': true, 'name': "{{ blueprint_repos.0 }}"}
        status_code: 201
        body_format: json
      register: result

    - name: Create blueprint repo "{{ blueprint_repos.1 }}
      ansible.builtin.uri:
        url: http://localhost:3000/api/v1/user/repos
        headers:
          Authorization: token {{ giteatoken }}
          Content-Type: application/json
          accept: application/json
        method: POST
        body: {'auto_init': true, 'name': "{{ blueprint_repos.1 }}"}
        status_code: 201
        body_format: json
      register: result

    - name: Create blueprint directory
      file:
        path: "{{ tmp_directory }}/blueprint"
        state: directory

    - name: Copy {{ blueprint_repos.0 }} to tmp_directory
      ansible.builtin.copy:
        src: "{{ installer_lib }}/{{ item }}.tar"
        dest: "{{ tmp_directory }}/blueprint/{{ item }}.tar"
        remote_src: true
      with_items:
        - "{{ blueprint_repos.0 }}"

    - name: Unarchive {{ blueprint_repos.0 }} archive
      ansible.builtin.unarchive:
        src: "{{ tmp_directory }}/blueprint/{{ item }}.tar"
        dest: "{{ tmp_directory }}/blueprint/"
        remote_src: true
      with_items:
        - "{{ blueprint_repos.0 }}"

    - name: Copy {{ blueprint_repos.1 }} to tmp_directory
      ansible.builtin.copy:
        src: "{{ installer_lib }}/{{ item }}.tar"
        dest: "{{ tmp_directory }}/blueprint/{{ item }}.tar"
      with_items:
        - "{{ blueprint_repos.1 }}"

    - name: Unarchive {{ blueprint_repos.1 }} archive
      ansible.builtin.unarchive:
        src: "{{ tmp_directory }}/blueprint/{{ item }}.tar"
        dest: "{{ tmp_directory }}/blueprint/"
        remote_src: true
      with_items:
        - "{{ blueprint_repos.1 }}"

    - name: Copy push script to tmp_directory
      ansible.builtin.copy:
        src: "{{ installer_lib }}/blueprint_push.sh"
        dest: "{{ tmp_directory }}/blueprint/blueprint_push.sh"

    - name: push all {{ blueprint_repos.0 }}
      shell: sh  "{{ tmp_directory }}"/blueprint/blueprint_push.sh "{{ tmp_directory }}"/blueprint/{{ blueprint_repos.0 }} {{ blueprint_repos.0 }} {{ giteatoken }}

    - name: push all {{ blueprint_repos.1 }}
      shell: sh  "{{ tmp_directory }}"/blueprint/blueprint_push.sh "{{ tmp_directory }}"/blueprint/{{ blueprint_repos.1 }} {{ blueprint_repos.1 }} {{ giteatoken }}

    - name: Remove blueprint temp dir
      file:
        path: "{{ tmp_directory }}/blueprint"
        state: absent
  when: (gitea_username is defined) and (installation_mode=='offline')
